import random

def get_new_board_state():
    return [[' ' for _ in range(3)] for _ in range(3)]

def ask_for_user_input():
    while True:
        try:
            move = input("Enter your move (row,col): ")
            x, y = map(int, move.split(','))
            return (x, y)
        except (ValueError, IndexError):
            print("Invalid input format! Please enter row,col (e.g., 0,0).")


def check_for_win(board_state):
    for row in board_state:
        if all([cell == 'X' for cell in row]):
            return True
        if all([cell == 'O' for cell in row]):
            return True
    for col in range(3):
        if all([board_state[row][col] == 'X' for row in range(3)]):
            return True
        if all([board_state[row][col] == 'O' for row in range(3)]):
            return True
    if all([board_state[i][i] == 'X' for i in range(3)]) or all([board_state[i][2-i] == 'X' for i in range(3)]):
        return True
    if all([board_state[i][i] == 'O' for i in range(3)]) or all([board_state[i][2-i] == 'O' for i in range(3)]):
        return True
    return False

def update_board_state(board_state, move, player):
    x, y = move
    board_state[x][y] = player
    return board_state

def get_computer_move(board_state):
    while True:
        x = random.randint(0, 2)
        y = random.randint(0, 2)
        if board_state[x][y] == ' ':
            return (x, y)

def print_board(board_state):
    for row in board_state:
        print('| ' + ' | '.join(row) + ' |')
        print('-------------')
    print()

def check_draw(board_state):
    for row in board_state:
        if ' ' in row:
            return False  #jeigu dar yra laisvu langeliu, nebus draw
    return True

def main():
    board_state = get_new_board_state()
    game_in_progress = True

    print("Welcome to Tic-Tac-Toe!")
    print_board(board_state)

    while game_in_progress:
        # eina useris
        player_move = ask_for_user_input()
        board_state = update_board_state(board_state, player_move, 'X')
        print_board(board_state)

        if check_for_win(board_state):
            print("Congratulations! You won!")
            game_in_progress = False
            break

        if check_draw(board_state):
            print("It's a draw!")
            game_in_progress = False
            break

        print("Computer is making its move...")
        computer_move = get_computer_move(board_state)
        board_state = update_board_state(board_state, computer_move, 'O')
        print_board(board_state)

        if check_for_win(board_state):
            print("Computer wins! Better luck next time.")
            game_in_progress = False
            break

        if check_draw(board_state):
            print("It's a draw")
            game_in_progress = False
            break


if __name__ == "__main__":
    main()
